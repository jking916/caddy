name: Build and Publish Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [published]
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0" # Run at midnight every Sunday

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Read Caddy version
        id: caddy_version
        run: |
          CADDY_VERSION=$(cat VERSION)
          echo "CADDY_VERSION=${CADDY_VERSION}" >> $GITHUB_ENV
          echo "caddy_version=${CADDY_VERSION}" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch,suffix=-${{ env.CADDY_VERSION }}
            type=ref,event=pr,suffix=-${{ env.CADDY_VERSION }}
            type=semver,pattern={{version}},suffix=-${{ env.CADDY_VERSION }}
            type=semver,pattern={{major}}.{{minor}},suffix=-${{ env.CADDY_VERSION }}
            type=sha,format=short,suffix=-${{ env.CADDY_VERSION }}
            type=raw,value=latest-${{ env.CADDY_VERSION }},enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=raw,value=${{ env.CADDY_VERSION }},enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            CADDY_VERSION=${{ env.CADDY_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
